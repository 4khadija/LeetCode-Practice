You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.
# Solution
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0); 
        ListNode curr = dummy; 
        int carry = 0; 
        while(l1 != null || l2 != null || carry == 1){
            int sum = 0; 
            if(l1 != null){ 
                sum += l1.val;
                l1 = l1.next;
            }
            if(l2 != null){ 
                sum += l2.val;
                l2 = l2.next;
            }
            sum += carry; 
            carry = sum/10; 
            ListNode node = new ListNode(sum % 10); 
            curr.next = node; 
            curr = curr.next; 
        }
        return dummy.next; 
    }
}
